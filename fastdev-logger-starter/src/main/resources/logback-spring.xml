<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 配置变量 -->
    <springProperty scope="context" name="applicationName" source="spring.application.name"/>
    <!-- 日志文件保存路径前缀 -->
    <property name="LOG_HOME_PATH" value="/home/data/${applicationName}/logs"/>
    <property name="encoder_pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%c{0}:%L] - %msg%n"/>
    <!-- 最大文件数量 当每天生成且只生成一个文件时才表示保留天数。-->
    <property name="maxHistory" value="15"/>
    <property name="maxFileSize" value="10MB"/>
    <!-- 超过最大文件时，启动时删除旧的日志文件。-->
    <property name="cleanHistoryOnStart" value="true"/>
    <!-- mybatis日志打印 -->
    <!--    <logger name="com.ibatis" level="DEBUG"/>-->
    <!--    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG"/>-->
    <!--    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>-->
    <!--    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG"/>-->
    <!--    <logger name="java.sql.Connection" level="DEBUG"/>-->
    <!--    <logger name="java.sql.Statement" level="DEBUG"/>-->
    <!--    <logger name="java.sql.PreparedStatement" level="DEBUG"/>-->

    <appender name="druidSqlRollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME_PATH}/%d.%i-druid-sql.log</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
            <cleanHistoryOnStart>${cleanHistoryOnStart}</cleanHistoryOnStart>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${encoder_pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <!-- 配置控制台的日志输出 -->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${encoder_pattern}</pattern>
        </layout>
    </appender>

    <!-- info类型日志 -->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>${encoder_pattern}</pattern>
        </encoder>
        <!--滚动策略，按照日期，每天一个文件-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>${LOG_HOME_PATH}/%d.%i-info.log</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
            <cleanHistoryOnStart>${cleanHistoryOnStart}</cleanHistoryOnStart>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- error 类型日志 -->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>${encoder_pattern}</pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>${LOG_HOME_PATH}/%d.%i-error.log</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
            <cleanHistoryOnStart>${cleanHistoryOnStart}</cleanHistoryOnStart>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>


    <!-- 运行日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${encoder_pattern}</pattern>
        </encoder>
        <file>${LOG_HOME_PATH}/server.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME_PATH}/server-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
            <cleanHistoryOnStart>${cleanHistoryOnStart}</cleanHistoryOnStart>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    <!-- skywalking日志接入 -->
    <appender name="sky-log" class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender">
        <!-- 日志输出编码 -->
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>
                ${encoder_pattern}
            </pattern>
        </encoder>
    </appender>
    <!--配置druid的SQL日志输出-->
    <!--    <logger name="druid.sql.Statement" level="DEBUG" additivity="false">-->
    <!--        <appender-ref ref="druidSqlRollingFile"/>-->
    <!--    </logger>-->

    <!--    <logger name="org.apache.ibatis" level="DEBUG"/>-->
    <!--    <logger name="com.tele" level="DEBUG"/>-->
    <!-- 使用范围 -->
    <root level="info">
        <appender-ref ref="consoleLog"/>
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="sky-log"/>
    </root>
</configuration>
